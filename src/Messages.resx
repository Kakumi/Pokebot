<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="API_GithubError" xml:space="preserve">
    <value>An error occurred while calling the Github API.</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Pokebot</value>
  </data>
  <data name="BotFactory_NotSupported" xml:space="preserve">
    <value>Bot type is not supported</value>
  </data>
  <data name="BotPokeFinder_InvalidFrame" xml:space="preserve">
    <value>This frame has already passed. Save the game and reload it (without save state).</value>
  </data>
  <data name="BotPokeFinder_InvalidSaveState" xml:space="preserve">
    <value>Bot is unable to start because the save state doesn't exists anymore.</value>
  </data>
  <data name="BotPokeFinder_PokemonNotFound" xml:space="preserve">
    <value>All frames has been tested and the pokemon with PID {0} has not been found.</value>
  </data>
  <data name="BotPokeFinder_TrainerInfo" xml:space="preserve">
    <value>TID : {0} - SID : {1}</value>
  </data>
  <data name="BotStarter_InvalidSaveState" xml:space="preserve">
    <value>Bot is unable to start because the save state doesn't exists anymore.</value>
  </data>
  <data name="BotStarter_PartyNotEmpty" xml:space="preserve">
    <value>This bot cannot be used because the party is not empty.</value>
  </data>
  <data name="BotStarter_WrongStartPosition" xml:space="preserve">
    <value>Bot is unable to start because the player is not in front of starters.</value>
  </data>
  <data name="Bot_NotRunning" xml:space="preserve">
    <value>Bot is not running</value>
  </data>
  <data name="Bot_Running" xml:space="preserve">
    <value>Bot is running...</value>
  </data>
  <data name="DiscordWebhook_Failed" xml:space="preserve">
    <value>Failed to send discord webhook: {0}</value>
  </data>
  <data name="Discord_Ability" xml:space="preserve">
    <value>Ability</value>
  </data>
  <data name="Discord_Content" xml:space="preserve">
    <value>The bot stopped because a pokemon with your filters has been encountered ! :partying_face:</value>
  </data>
  <data name="Discord_Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Discord_IVAttack" xml:space="preserve">
    <value>IV Attack</value>
  </data>
  <data name="Discord_IVDefense" xml:space="preserve">
    <value>IV Defense</value>
  </data>
  <data name="Discord_IVHp" xml:space="preserve">
    <value>IV Hp</value>
  </data>
  <data name="Discord_IVSpAttack" xml:space="preserve">
    <value>IV Sp. Attack</value>
  </data>
  <data name="Discord_IVSpDefense" xml:space="preserve">
    <value>IV Sp. Defense</value>
  </data>
  <data name="Discord_IVSpeed" xml:space="preserve">
    <value>IV Speed</value>
  </data>
  <data name="Discord_Nature" xml:space="preserve">
    <value>Nature</value>
  </data>
  <data name="Discord_PokemonName" xml:space="preserve">
    <value>{0} ({1})</value>
  </data>
  <data name="Discord_Shiny" xml:space="preserve">
    <value>Shiny</value>
  </data>
  <data name="Discord_ShinyNo" xml:space="preserve">
    <value>No :x:</value>
  </data>
  <data name="Discord_ShinyYes" xml:space="preserve">
    <value>Yes :white_check_mark:</value>
  </data>
  <data name="Discord_Trainer" xml:space="preserve">
    <value>Trainer</value>
  </data>
  <data name="Error_ReadingBotType" xml:space="preserve">
    <value>Error occurred while reading bot type.</value>
  </data>
  <data name="Filter_AnyItem" xml:space="preserve">
    <value>Any item</value>
  </data>
  <data name="Filter_AnyNature" xml:space="preserve">
    <value>Any nature</value>
  </data>
  <data name="Filter_AnyPokemon" xml:space="preserve">
    <value>Any pokemon</value>
  </data>
  <data name="Filter_AnyType" xml:space="preserve">
    <value>Any type</value>
  </data>
  <data name="Item_Nothing" xml:space="preserve">
    <value>Nothing</value>
  </data>
  <data name="NewVersion_Message" xml:space="preserve">
    <value>Do you want to download the version {0} ?</value>
  </data>
  <data name="NewVersion_MessageLabel" xml:space="preserve">
    <value>The version {0} is now available on Github !</value>
  </data>
  <data name="NewVersion_Title" xml:space="preserve">
    <value>New version available</value>
  </data>
  <data name="Pokemon_Found" xml:space="preserve">
    <value>Pokemon with filters found.</value>
  </data>
  <data name="Pokemon_FoundCatch" xml:space="preserve">
    <value>Pokemon with filters found. Catch it manually.</value>
  </data>
  <data name="Pokemon_NotValid" xml:space="preserve">
    <value>Pokemon is not valid</value>
  </data>
  <data name="Rom_Loaded" xml:space="preserve">
    <value>ROM {0} loaded</value>
  </data>
  <data name="Rom_NotLoaded" xml:space="preserve">
    <value>No ROM loaded</value>
  </data>
  <data name="Rom_NotSupported" xml:space="preserve">
    <value>This ROM is not supported</value>
  </data>
  <data name="Settings_Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Settings_Sound" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="Settings_Speed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="SpinBot_StartOnlyMap" xml:space="preserve">
    <value>Start this bot while you are on the map</value>
  </data>
  <data name="SpinBot_UnknowNextMove" xml:space="preserve">
    <value>Can't spin the player, next move is unknown</value>
  </data>
  <data name="Symbols_Empty" xml:space="preserve">
    <value>No symbols found for this game.</value>
  </data>
  <data name="Tab_BotPanel" xml:space="preserve">
    <value>Bot</value>
  </data>
  <data name="Tab_EncounterStats" xml:space="preserve">
    <value>Bot Stats</value>
  </data>
  <data name="Tab_LogsPanel" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="Tab_SettingsPanel" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Tab_ViewerOpponentName" xml:space="preserve">
    <value>Opponent</value>
  </data>
  <data name="Tab_ViewerPartyName" xml:space="preserve">
    <value>Party</value>
  </data>
  <data name="Tooltip_Delay" xml:space="preserve">
    <value>It's better to have some delay between each actions to avoid the bot to freeze while doing input. 0.1 is recommanded.</value>
  </data>
  <data name="Viewer_Ability" xml:space="preserve">
    <value>Ability: {0}</value>
  </data>
  <data name="Viewer_Attack" xml:space="preserve">
    <value>Attack: {0}</value>
  </data>
  <data name="Viewer_Defense" xml:space="preserve">
    <value>Defense: {0}</value>
  </data>
  <data name="Viewer_HiddenPowerDamage" xml:space="preserve">
    <value>Hidden Power Damage: {0}</value>
  </data>
  <data name="Viewer_HiddenPowerType" xml:space="preserve">
    <value>Hidden Power: {0}</value>
  </data>
  <data name="Viewer_HP" xml:space="preserve">
    <value>HP: {0}</value>
  </data>
  <data name="Viewer_Item" xml:space="preserve">
    <value>Item: {0}</value>
  </data>
  <data name="Viewer_Move" xml:space="preserve">
    <value>{0} ({1}/{2})</value>
  </data>
  <data name="Viewer_Nature" xml:space="preserve">
    <value>Nature: {0}</value>
  </data>
  <data name="Viewer_NoMove" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="Viewer_NotShiny" xml:space="preserve">
    <value>Not shiny</value>
  </data>
  <data name="Viewer_Shiny" xml:space="preserve">
    <value>Shiny</value>
  </data>
  <data name="Viewer_SpAttack" xml:space="preserve">
    <value>Sp. Attack: {0}</value>
  </data>
  <data name="Viewer_SpDefense" xml:space="preserve">
    <value>Sp. Defense: {0}</value>
  </data>
  <data name="Viewer_Speed" xml:space="preserve">
    <value>Speed: {0}</value>
  </data>
</root>